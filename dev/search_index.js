var documenterSearchIndex = {"docs":
[{"location":"ref/import/#Import-data","page":"Importing data","title":"Import data","text":"","category":"section"},{"location":"ref/import/#Phy-output-data","page":"Importing data","title":"Phy output data","text":"","category":"section"},{"location":"ref/import/","page":"Importing data","title":"Importing data","text":"Laska.importphy(phydir::String, glxdir::String, triggerpath::String; triggers::Bool=true, includemua::Bool=false)","category":"page"},{"location":"ref/import/#Laska.importphy-Tuple{String, String, String}","page":"Importing data","title":"Laska.importphy","text":"importphy(phydir::String, glxdir::String, triggerpath::String; triggers::Bool=true, includemua::Bool=false)\n\nImport output from phy. Spiketimes are sorted.\n\nBy default, only \"good\" clusters as per phy output are included. Setting includemua=true will include \"mua\" clusters as well as unclassified.             Clusters may be further filtered based on any variable in \"cluster_info.tsv\". This is done by including a Tuple with the column to be filtered as a symbol and a filtering function. Several Tuples containing such filters may be included by wrapping them in a Tuple.         \n\nExample\n\n# Removes any cluster with a mean firing rate less than 1:\n\n# A function returning true if x > 1\nfunction filterfunc(x::Float64)\n    return x > 1\nend\n\n# A tuple with the above function (filterfunc) and the column to which it should be\n# applied (:fr).\nfiltertuple = (:fr, filterfunc)\n\nresult = importphy(\"phyoutput_directory\", \"glxoutput_directory\", \"direct_path_to_triggerfile\", filtertuple)\n\n\n\n\n\n","category":"method"},{"location":"ref/summarize/#Summary-statistics","page":"Summarizing","title":"Summary statistics","text":"","category":"section"},{"location":"#Laska.jl-documentation","page":"Home","title":"Laska.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Laska","category":"page"},{"location":"#Summarizing-statistics","page":"Home","title":"Summarizing statistics","text":"","category":"section"},{"location":"#Calculating-CV2","page":"Home","title":"Calculating CV2","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Laska.cv2(cluster::Laska.Cluster)","category":"page"},{"location":"#Laska.cv2-Tuple{Laska.Cluster}","page":"Home","title":"Laska.cv2","text":"cv2(cluster::Cluster)\n\nReturns CV2 values of cluster as a vector.\n\nCV2 is calculated according to:\n\nCV2 = frac2ISI_n+1 - ISI_n(ISI_n+1 + ISI_n)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"Laska.cv2mean(cluster::Laska.Cluster)","category":"page"},{"location":"#Laska.cv2mean-Tuple{Laska.Cluster}","page":"Home","title":"Laska.cv2mean","text":"cv2mean(cluster::Cluster)\n\nCalculates the mean CV2 of cluster.\n\n\n\n\n\n","category":"method"},{"location":"#Calculating-frequency","page":"Home","title":"Calculating frequency","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Laska.frequency(cluster::Laska.Cluster, interval::T) where {T<:Real}","category":"page"},{"location":"#Laska.frequency-Union{Tuple{T}, Tuple{Laska.Cluster, T}} where T<:Real","page":"Home","title":"Laska.frequency","text":"frequency(cluster::Cluster, period::T) where {T<:Real}\n\nReturns a Vector containing the frequency of the cluster in the form of spikes/period binned at each multiple of period.             Spiketimes are binned to the next largest multiple of period. Ie a spike happening at time = 30001 will be in the 60000 bin.\n\nExample\n\nFor a cluster sampled at 30 000Hz...\n\nLaska.frequency(cluster, 30000)\n\n...will return spikes/second.\n\nIndexing into the result as:        \n\nresult[n]\n\nWill return the n:th bin which describes the number of spikes occuring between period * n and period * n-1.\n\n\n\n\n\n","category":"method"},{"location":"#Helpers","page":"Home","title":"Helpers","text":"","category":"section"},{"location":"#ISI","page":"Home","title":"ISI","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Laska.isi(cluster::Laska.Cluster{T}) where {T<:Real}","category":"page"},{"location":"#Laska.isi-Union{Tuple{Laska.Cluster{T}}, Tuple{T}} where T<:Real","page":"Home","title":"Laska.isi","text":"isi(cluster::Cluster{T}) where {T<:Real}\n\nCalculate the ISI of each spike in cluster.\n\n\n\n\n\n","category":"method"},{"location":"#Spike-filtering","page":"Home","title":"Spike filtering","text":"","category":"section"},{"location":"#By-depth","page":"Home","title":"By depth","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Laska.spikesatdepth(p::Laska.PhyOutput{T}, depth::N) where {T<:Real} where {N<:Real}","category":"page"},{"location":"#Laska.spikesatdepth-Union{Tuple{T}, Tuple{N}, Tuple{Laska.PhyOutput{T}, N}} where {N<:Real, T<:Real}","page":"Home","title":"Laska.spikesatdepth","text":"spikesatdepth(p::PhyOutput{T}, depth::N) where {T<:Real} where {N<:Real}\nspikesatdepth(p::PhyOutput{T}, depth::Tuple{2,N}) where {T<:Real} where {N<:Real}\nspikesatdepth(p::PhyOutput{T}, depth::Set{N}) where {T<:Real} where {N<:Real}\n\nReturns a Vector{T} of all spiketimes at/in depth.\n\nThe included depths are controlled by the type of the depth variable:                 \n\nA single number returns only the spikes of clusters at that exact depth.                  \nA Tuple with 2 entries returns all clusters at depths between (and including) the values.                  \n\nrelativefrequency(vec::Vector{Vector{T}}, period::N) where {T<:Real,N<:Real}\n\nA Set returns the clusters with the exact depths in the Set.\n\n\n\n\n\n","category":"method"},{"location":"#Rounding","page":"Home","title":"Rounding","text":"","category":"section"},{"location":"#roundup()","page":"Home","title":"roundup()","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Laska.roundup(value::T, interval::N) where {T<:Real} where {N<:Real}","category":"page"},{"location":"#Laska.roundup-Union{Tuple{T}, Tuple{N}, Tuple{T, N}} where {N<:Real, T<:Real}","page":"Home","title":"Laska.roundup","text":"roundup(value::T, interval::N) where T<:Real where N<:Real\n\nRounds value up to the nearest greater multiple of interval.\n\n\n\n\n\n","category":"method"},{"location":"#Examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Laska.roundup(12, 30)\nLaska.roundup(12, 23)\nLaska.roundup(12.5, 1)\nLaska.roundup(12, 3.8)","category":"page"},{"location":"ref/visualize/#Visualizing","page":"Visualize","title":"Visualizing","text":"","category":"section"},{"location":"ref/visualize/#Recipes","page":"Visualize","title":"Recipes","text":"","category":"section"},{"location":"ref/visualize/#Frequency-by-depth","page":"Visualize","title":"Frequency by depth","text":"","category":"section"}]
}
