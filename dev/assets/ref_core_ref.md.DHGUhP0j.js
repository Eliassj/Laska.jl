import{_ as s,c as i,o as e,a6 as a}from"./chunks/framework.Dp6owxBf.js";const u=JSON.parse('{"title":"LaskaCore reference","description":"","frontmatter":{},"headers":[],"relativePath":"ref/core_ref.md","filePath":"ref/core_ref.md","lastUpdated":null}'),t={name:"ref/core_ref.md"},l=a(`<h1 id="LaskaCore-reference" tabindex="-1">LaskaCore reference <a class="header-anchor" href="#LaskaCore-reference" aria-label="Permalink to &quot;LaskaCore reference {#LaskaCore-reference}&quot;">​</a></h1><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Core.Type-Union{Tuple{U}, Tuple{T}, Tuple{UndefInitializer, AbstractVector{Int64}, U}} where {T, U}" href="#Core.Type-Union{Tuple{U}, Tuple{T}, Tuple{UndefInitializer, AbstractVector{Int64}, U}} where {T, U}">#</a> <b><u>Core.Type</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{RelativeSpikeVector{T,U}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UndefInitializer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{Int}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sample_rate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span></code></pre></div><p>Create a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> with <code>length(ns)</code> sub-vectors. Sub-vector<code>[n]</code> is initialized with <code>ns[n]</code> undefined elements. (ie <code>Vector{T}(undef, ns[n])</code>)</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L514-L518" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Core.Type-Union{Tuple{U}, Tuple{T}, Tuple{UndefInitializer, Int64, U}} where {T, U}" href="#Core.Type-Union{Tuple{U}, Tuple{T}, Tuple{UndefInitializer, Int64, U}} where {T, U}">#</a> <b><u>Core.Type</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{RelativeSpikeVector{T,U}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UndefInitializer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n, samplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span></code></pre></div><p>Create a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> of length <code>n</code> with uninitialized sub-vectors.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L500-L504" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Core.Type-Union{Tuple{U}, Tuple{T}, Tuple{UndefInitializer, Integer, U}} where {T, U}" href="#Core.Type-Union{Tuple{U}, Tuple{T}, Tuple{UndefInitializer, Integer, U}} where {T, U}">#</a> <b><u>Core.Type</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{SpikeVector{T,U}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UndefInitializer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, samplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span></code></pre></div><p>Initialize a <code>SpikeVector</code> of length <code>n</code> with <code>samplerate</code></p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L153-L158" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.AbstractCluster" href="#LaskaCore.AbstractCluster">#</a> <b><u>LaskaCore.AbstractCluster</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractCluster{T,U} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Parent type to concrete types representing single clusters.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L9-L14" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.AbstractExperiment" href="#LaskaCore.AbstractExperiment">#</a> <b><u>LaskaCore.AbstractExperiment</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractExperiment{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Parent type to concrete types representing entire experiments containing their specifications, metadata and clusters.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L6-L10" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.AbstractSpikeVector" href="#LaskaCore.AbstractSpikeVector">#</a> <b><u>LaskaCore.AbstractSpikeVector</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractSpikeVector{T,U} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{T,1}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Supertype for <code>Vector</code>s holding spiketimes and the samplerate at which they were collected/are represented as.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L7-L11" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.Cluster" href="#LaskaCore.Cluster">#</a> <b><u>LaskaCore.Cluster</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cluster{T,U} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractCluster{T,U}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spiketimes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector{T,U}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Struct for holding a single Cluster.</p><p>Direct field access is <strong>not</strong> recommended. Basic interface functions include:</p><ul><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.id-Tuple{T} where T&lt;:AbstractCluster"><code>LaskaCore.id</code></a> – Returns the Cluster id.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.nspikes-Tuple{Cluster}"><code>LaskaCore.nspikes</code></a> – Returns the number of spikes in the cluster (Based off length of the <code>spiketimes</code> field).</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.info-Tuple{T} where T&lt;:AbstractCluster"><code>LaskaCore.info</code></a> – Returns the info of the <code>Cluster</code> from &quot;cluster_info.tsv&quot; as a <code>DataFrame</code> row.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.spiketimes-Tuple{LaskaCore.AbstractSpikeVector}"><code>LaskaCore.spiketimes</code></a> – Returns a Vector containing all spiketimes of the <code>Cluster</code>.</p></li></ul><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L19-L36" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.ImroTbl" href="#LaskaCore.ImroTbl">#</a> <b><u>LaskaCore.ImroTbl</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ImroTbl{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractNPProbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractImroTbl{T}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Matrix{T}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    entries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">E</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Struct returned by <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.parseimroTbl-Tuple{Any}"><code>LaskaCore.parseimroTbl</code></a>. Contains a matrix of the entries in the Imec Readout Table and a named tuple of the different entries. Each column is a different entry (such as Channel ID, AP band gain etc) while each row contain the values of 1 channel.</p><p>For more information on possible entries depending on probetype please see the <a href="http://billkarsh.github.io/SpikeGLX/Sgl_help/Metadata_30.html" target="_blank" rel="noreferrer">SpikeGLX manual</a></p><p>In order to get the entries of a certain parse <code>ImroTbl</code> <code>Base.keys()</code> may be used.</p><p><strong>Example</strong></p><p>The table may be indexed into as such:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaskaCore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parseimroTbl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SomePhyOutput)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Will return the entire column of channel ids</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Channel_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Will return the channel id of the first channel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Channel_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Will return all entries for the first channel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,:]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Will return the 4th entry of the 1st channel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L45-L78" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.PhyOutput" href="#LaskaCore.PhyOutput">#</a> <b><u>LaskaCore.PhyOutput</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PhyOutput </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractExperiment</span></span></code></pre></div><p>Struct for holding Kilosort output preprocessed in Phy. Should be instantiated using the outer constructor <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.importphy"><code>LaskaCore.importphy</code></a>.</p><p>Direct field access is <strong>not</strong> recommended. Basic interface functions include:</p><ul><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.clusterids-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.clusterids</code></a> – Returns all cluster ID:s as a Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.info-Tuple{T} where T&lt;:AbstractCluster"><code>LaskaCore.info</code></a> – Returns &quot;cluster_info.tsv&quot; as a DataFrame.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.getcluster-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:AbstractExperiment"><code>LaskaCore.getcluster</code></a> – Returns a specific <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.Cluster"><code>LaskaCore.Cluster</code></a>.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.clustervector-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.clustervector</code></a> – Returns all <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.Cluster"><code>LaskaCore.Cluster</code></a>s in a Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.getmeta"><code>LaskaCore.getmeta</code></a> – Returns the spikeGLX meta as a Dict or a specific entry if specified.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.triggertimes-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.triggertimes</code></a> – Returns the trigger event indices as a Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.ntrigs-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.ntrigs</code></a> – Returns the length of the trigger event time Vector.</p></li></ul><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L13-L28" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.RelativeCluster" href="#LaskaCore.RelativeCluster">#</a> <b><u>LaskaCore.RelativeCluster</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RelativeCluster{T,U} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractCluster{T,U}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SubDataFrame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spiketimes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector{T,U}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Struct for holding a cluster and its spiketimes relative to triggers. Similar to <code>Cluster{T}</code> except that the field <code>spiketimes</code> is a <code>Vector{Vector{T}}</code> where each vector represents trigger #n.</p><p>Direct field access is <strong>not</strong> recommended. Basic interface functions include:</p><ul><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.id-Tuple{T} where T&lt;:AbstractCluster"><code>LaskaCore.id</code></a> – Returns the Cluster id.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.nspikes-Tuple{Cluster}"><code>LaskaCore.nspikes</code></a> – Returns the number of spikes in each spiketrain.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.info-Tuple{T} where T&lt;:AbstractCluster"><code>LaskaCore.info</code></a> – Returns the info of the <code>Cluster</code> from &quot;cluster_info.tsv&quot; as a <code>DataFrame</code> row.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.spiketimes-Tuple{LaskaCore.AbstractSpikeVector}"><code>LaskaCore.spiketimes</code></a> – Returns a Vector containing all spiketimes of the <code>Cluster</code>.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.samplerate-Tuple{AbstractCluster}"><code>LaskaCore.samplerate</code></a> – Returns the samplerate of the spiketimes belonging to the cluster.</p></li></ul><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L100-L119" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.RelativeSpikeVector" href="#LaskaCore.RelativeSpikeVector">#</a> <b><u>LaskaCore.RelativeSpikeVector</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RelativeSpikeVector{T,U} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractSpikeVector{T,U}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spiketimes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Vector{T}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    samplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Struct for holding spiketimes relative to some trigger as well as their samplerate.</p><p>The spiketimes themselves are held in a <code>Vector{Vector{T}}</code> (A vector of vectors) where the inner vector <code>n</code> holds spiketimes relative to the <code>n</code>:th trigger event.</p><p>Since this is not a mutable struct the sample rate cannot be changed in-place. The spiketimes themselves may however be changed since they are stored in a mutable <code>Vector{T}</code>. For conversion to a new sample rate, creating a new instance of <code>RelativeSpikeVector</code> using <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.convertsamplerate-Union{Tuple{N}, Tuple{U}, Tuple{T}, Tuple{SpikeVector{T, U}, Any, Type{N}}} where {T, U, N}"><code>LaskaCore.convertsamplerate</code></a> is recommended.</p><p><strong>Indexing</strong></p><p>Since this is essentially just a vector of vectors it can be indexed as <code>vec[i][j]</code> where <code>i</code> refers to the <code>i</code>:th trigger events and <code>j</code> to the <code>j</code>:th spiketime tied to that trigger event.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L30-L46" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.RelativeSpikes" href="#LaskaCore.RelativeSpikes">#</a> <b><u>LaskaCore.RelativeSpikes</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RelativeSpikes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractExperiment</span></span></code></pre></div><p>Similar to <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.PhyOutput"><code>LaskaCore.PhyOutput</code></a>. However, instead of <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.Cluster"><code>LaskaCore.Cluster</code></a>s, <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeCluster"><code>LaskaCore.RelativeCluster</code></a>s are used. In these, spike trains relative to trigger event(s) instead of absolute spiketimes are contained. Additionally contains the fields:</p><p>Direct field access is <strong>not</strong> recommended. Interface functions include:</p><ul><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.clusterids-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.clusterids</code></a> – Returns all cluster ID:s as a Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.getcluster-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:AbstractExperiment"><code>LaskaCore.getcluster</code></a> – Returns a specific <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.Cluster"><code>LaskaCore.Cluster</code></a>.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.clustervector-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.clustervector</code></a> – Returns all <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.Cluster"><code>LaskaCore.Cluster</code></a>s in a Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.getmeta"><code>LaskaCore.getmeta</code></a> – Returns the spikeGLX meta as a Dict or a specific entry if specified.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.triggertimes-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.triggertimes</code></a> – Returns the trigger event times as a Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.ntrigs-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.ntrigs</code></a> – Returns the length of the trigger event time Vector.</p></li><li><p><a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.stimtimes-Tuple{RelativeSpikes}"><code>LaskaCore.stimtimes</code></a> – Returns a dict containging the stimulation labels and times specified when calling <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.relativespikes-Union{Tuple{Y}, Tuple{S}, Tuple{M}, Tuple{V}, Tuple{U}, Tuple{T}, Tuple{PhyOutput{T, U, M, S}, Dict{String, V}, Y, Y}} where {T, U, V, M, S&lt;:(Vector{&lt;:Integer}), Y&lt;:Real}"><code>LaskaCore.relativespikes</code></a>.</p></li><li><p>[<code>LaskaCore.relativespecs</code>] – Returns a <code>NamedTuple</code> with the <code>back</code> and <code>forward</code> values specified when calling <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.relativespikes-Union{Tuple{Y}, Tuple{S}, Tuple{M}, Tuple{V}, Tuple{U}, Tuple{T}, Tuple{PhyOutput{T, U, M, S}, Dict{String, V}, Y, Y}} where {T, U, V, M, S&lt;:(Vector{&lt;:Integer}), Y&lt;:Real}"><code>LaskaCore.relativespikes</code></a> as well as the number of trigger events.</p></li></ul><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L38-L57" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.SpikeTrainIterator" href="#LaskaCore.SpikeTrainIterator">#</a> <b><u>LaskaCore.SpikeTrainIterator</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeTrainIterator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spikes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Iterator which lazily iterates over all sequential times between <code>t_start</code> and <code>t_end</code>, returning 1 at times where there is a spike. Currently only supports <code>Integer</code> time steps. A <code>SpikeVector</code> with spikes at t = 2, 3, 5 with <code>t_start</code> = 0 and <code>t_end</code> = 5 would yield: <code>[0, 0, 1, 1, 0, 1]</code></p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">it </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpikeTrainIterator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spikes, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Do something based on if s = 1 or s = 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/iterators.jl#L5-L26" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.SpikeVector" href="#LaskaCore.SpikeVector">#</a> <b><u>LaskaCore.SpikeVector</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpikeVector{T,U} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractSpikeVector{T,U}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spiketimes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{T}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    samplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Struct for holding spiketimes and the sample rate in Hz.</p><p>Since this is not a mutable struct the sample rate cannot be changed in-place. The spiketimes themselves may however be changed since they are stored in a mutable <code>Vector{T}</code>. For conversion to a new sample rate, creating a new <code>RelativeSpikeVector</code> using <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.convertsamplerate-Union{Tuple{N}, Tuple{U}, Tuple{T}, Tuple{SpikeVector{T, U}, Any, Type{N}}} where {T, U, N}"><code>LaskaCore.convertsamplerate</code></a> is recommended.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L14-L24" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.filter!-Union{Tuple{T}, Tuple{Any, AbstractExperiment{T}}} where T" href="#Base.filter!-Union{Tuple{T}, Tuple{Any, AbstractExperiment{T}}} where T">#</a> <b><u>Base.filter!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, exp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T}</span></span></code></pre></div><p>Filter the <code>Cluster</code>s of <code>exp</code> based off a column in its info <code>DataFrame</code>. The syntax is the same as when filtering a &quot;normal&quot; DataFrame. <code>exp</code> is filtered in-place.</p><p><strong>Example</strong></p><p>In order to remove all clusters of <code>exp</code> with a depth less than 1000:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exp)</span></span></code></pre></div><p>For more in-depth information see the documentation for filtering of DataFrames: <a href="https://dataframes.juliadata.org/stable/lib/functions/#Base.filter" target="_blank" rel="noreferrer">https://dataframes.juliadata.org/stable/lib/functions/#Base.filter</a></p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/filter/filterexperiment.jl#L3-L18" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.similar-Tuple{RelativeSpikeVector, Type}" href="#Base.similar-Tuple{RelativeSpikeVector, Type}">#</a> <b><u>Base.similar</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> of the same dimensions as <code>V</code> with type <code>S</code> and the same samplerate.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L549-L553" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.similar-Tuple{RelativeSpikeVector}" href="#Base.similar-Tuple{RelativeSpikeVector}">#</a> <b><u>Base.similar</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> of the same type and dimensions as <code>V</code> and the same samplerate.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L540-L544" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.similar-Tuple{T} where T&lt;:LaskaCore.AbstractSpikeVector" href="#Base.similar-Tuple{T} where T&lt;:LaskaCore.AbstractSpikeVector">#</a> <b><u>Base.similar</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Create an (subtype of) <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.AbstractSpikeVector"><code>LaskaCore.AbstractSpikeVector</code></a> of the same type and size as <code>V</code> with the same samplerate.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L262-L266" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.similar-Union{Tuple{T}, Tuple{T, Type}} where T&lt;:LaskaCore.AbstractSpikeVector" href="#Base.similar-Union{Tuple{T}, Tuple{T, Type}} where T&lt;:LaskaCore.AbstractSpikeVector">#</a> <b><u>Base.similar</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Create an (subtype of) <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.AbstractSpikeVector"><code>LaskaCore.AbstractSpikeVector</code></a> of the same size as <code>V</code> with type <code>S</code> with the same samplerate.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L271-L275" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.vec-Union{Tuple{LaskaCore.AbstractSpikeVector{T, U}}, Tuple{U}, Tuple{T}} where {T, U}" href="#Base.vec-Union{Tuple{LaskaCore.AbstractSpikeVector{T, U}}, Tuple{U}, Tuple{T}} where {T, U}">#</a> <b><u>Base.vec</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSpikeVector{T,U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span></code></pre></div><p>Returns a <strong>view</strong> into the spiketimes of <code>V</code> as a <code>Vector{T}</code>. Modifying the returned vector will therefore also modify <code>V</code>!</p><p>In order to modify the returned <code>Vector</code> without affecting <code>V</code> explicitly make a copy using <code>deepcopy(vec(V))</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L57-L63" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.arbitraryround-Union{Tuple{N}, Tuple{T}, Tuple{T, N}} where {T, N}" href="#LaskaCore.arbitraryround-Union{Tuple{N}, Tuple{T}, Tuple{T, N}} where {T, N}">#</a> <b><u>LaskaCore.arbitraryround</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arbitraryround</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Rounds <code>value</code> to the nearest multiple of <code>interval</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/rounding.jl#L28-L34" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.clusterids-Tuple{T} where T&lt;:AbstractExperiment" href="#LaskaCore.clusterids-Tuple{T} where T&lt;:AbstractExperiment">#</a> <b><u>LaskaCore.clusterids</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clusterids</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a Vector of all cluster id:s present in experiment.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L90-L95" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.clustervector-Tuple{T} where T&lt;:AbstractExperiment" href="#LaskaCore.clustervector-Tuple{T} where T&lt;:AbstractExperiment">#</a> <b><u>LaskaCore.clustervector</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clustervector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a <code>Vector{T}</code> where T&lt;:AbstractCluster containing all clusters in <code>experiment</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L110-L115" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.convertsamplerate-Union{Tuple{N}, Tuple{U}, Tuple{T}, Tuple{SpikeVector{T, U}, Any, Type{N}}} where {T, U, N}" href="#LaskaCore.convertsamplerate-Union{Tuple{N}, Tuple{U}, Tuple{T}, Tuple{SpikeVector{T, U}, Any, Type{N}}} where {T, U, N}">#</a> <b><u>LaskaCore.convertsamplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convertsamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector{T,U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newsamplerate, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U,N}</span></span></code></pre></div><p>If a specific output type of the spiketimes in the returned <code>SpikeVector</code> is desired, one may pass the type as the last argument.</p><p>This function will create a new <code>SpikeVector</code> leaving <code>V</code> untouched.</p><p><strong>Example</strong></p><p>In the example below, a <code>SpikeVector{Float64, Int64}</code> with sample rate 30000Hz is converted to a <code>SpikeVector{Int64,Int64}</code> with sample rate 1Hz. This requires that all resulting spiketimes of <code>V</code> after conversion is representable as <code>N</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create a SpikeVector with spiketimes as Float64.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element SpikeVector{Float64, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     1.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     2.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     3.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     4.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     ⋮</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29998.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29999.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30000.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Since the conversion becomes time * (30_000 / 1) all times will be representable as Int64:s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaskaCore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convertsamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Int64)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element SpikeVector{Int64, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     30000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     60000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     90000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    120000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         ⋮</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 899940000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 899970000</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 900000000</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L208-L245" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.convertsamplerate-Union{Tuple{U}, Tuple{T}, Tuple{SpikeVector{T, U}, Any}} where {T, U}" href="#LaskaCore.convertsamplerate-Union{Tuple{U}, Tuple{T}, Tuple{SpikeVector{T, U}, Any}} where {T, U}">#</a> <b><u>LaskaCore.convertsamplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convertsamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector{T,U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newsamplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U,N}</span></span></code></pre></div><p>Convert <code>SpikeVector</code> <code>V</code> to a new samplerate. The type of the new vector will be <code>SpikeVector{Float64, typeof(newsamplerate)}</code>.</p><p>This function will create a new <code>SpikeVector</code> leaving <code>V</code> untouched.</p><p><strong>Example</strong></p><p>In the example below, a <code>SpikeVector</code> with a sample rate of 30000Hz is converted to one with a sample rate of 1Hz.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element SpikeVector{Int64, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       ⋮</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2999998</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2999999</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaskaCore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">convertsamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element SpikeVector{Float64, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  30000.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  60000.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  90000.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120000.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ⋮</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      8.999994e10</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      8.999997e10</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      9.0e10</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L164-L197" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.extremevals" href="#LaskaCore.extremevals">#</a> <b><u>LaskaCore.extremevals</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> extremevals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Vector{T}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> extremevals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the extrema of a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> or a <code>Vector{Vector{T}}</code>, similar to the <code>extrema</code> function from <code>Base</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/findmax.jl#L69-L74" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.filterduplicatespikes!-Tuple{SpikeVector}" href="#LaskaCore.filterduplicatespikes!-Tuple{SpikeVector}">#</a> <b><u>LaskaCore.filterduplicatespikes!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filterduplicatespikes!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Finds all spikes with identical spiketimes in <code>v</code> and removes one of them. Mutates <code>v</code>, for non-mutating version see <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.filterduplicatespikes-Tuple{SpikeVector}"><code>LaskaCore.filterduplicatespikes</code></a>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/filter/filterspikevecs.jl#L24-L29" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.filterduplicatespikes-Tuple{SpikeVector}" href="#LaskaCore.filterduplicatespikes-Tuple{SpikeVector}">#</a> <b><u>LaskaCore.filterduplicatespikes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filterduplicatespikes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Finds all spikes with identical spiketimes in <code>v</code> and removes one of them. Returns a new <code>SpikeVector</code>, leaving <code>v</code> unchanged. For mutating version see <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.filterduplicatespikes!-Tuple{SpikeVector}"><code>LaskaCore.filterduplicatespikes!</code></a>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/filter/filterspikevecs.jl#L5-L11" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.getcluster-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:AbstractExperiment" href="#LaskaCore.getcluster-Union{Tuple{T}, Tuple{T, Any}} where T&lt;:AbstractExperiment">#</a> <b><u>LaskaCore.getcluster</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getcluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a <code>cluster</code> from <code>experiment</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L68-L74" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.getmeta" href="#LaskaCore.getmeta">#</a> <b><u>LaskaCore.getmeta</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getmeta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, entry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getmeta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns experiment meta info from spikeGLX. If an <code>entry</code> string is not supplied all entries are returned.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L131-L137" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.gettrig-Union{Tuple{Vector{T}}, Tuple{T}} where T&lt;:Real" href="#LaskaCore.gettrig-Union{Tuple{Vector{T}}, Tuple{T}} where T&lt;:Real">#</a> <b><u>LaskaCore.gettrig</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gettrig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Extract trigger event indices.</p><p>Assumes that <code>t</code> is 0 except at trigger events. Returns only the <em>first</em> index at each trigger event(ie series of sequential nonzero indices).</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># * = Indices that will be returned, ^ = trigger</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#            *                 *</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#            ^ ^ ^ ^           ^ ^ ^ ^ ^ ^ </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Will return [5, 14]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LaskaCore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gettrig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v)</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L261-L282" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.id-Tuple{T} where T&lt;:AbstractCluster" href="#LaskaCore.id-Tuple{T} where T&lt;:AbstractCluster">#</a> <b><u>LaskaCore.id</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the id of <code>cluster</code></p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L44-L48" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.importchanint16bin-Tuple{String}" href="#LaskaCore.importchanint16bin-Tuple{String}">#</a> <b><u>LaskaCore.importchanint16bin</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">importchanint16bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Import a .bin file containing a <strong>SINGLE</strong> channel.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L235-L240" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.importchanint16csv-Tuple{String}" href="#LaskaCore.importchanint16csv-Tuple{String}">#</a> <b><u>LaskaCore.importchanint16csv</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">importchanint16csv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Import a .csv file containing a <strong>SINGLE</strong> channel. This is considerably slower than importing from a .bin-file as exported by SpikeGLX.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L248-L255" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.importglx-Tuple{String, Any, Any, Any}" href="#LaskaCore.importglx-Tuple{String, Any, Any, Any}">#</a> <b><u>LaskaCore.importglx</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">importglx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, channels, t, meta)</span></span></code></pre></div><p>Import raw Neuropixels channels from a .ap.bin file.</p><p><strong>Arguments</strong></p><ul><li><p><code>path</code>: Direct path to the ap.bin file from which to read</p></li><li><p><code>channels</code>: Channels to import. May be any value capable of indexing rows of a matrix.</p></li><li><p><code>t</code>: Time indices to include. Using 1:30001 will import the full first second of the recording if the samplerate is 30000 Hz.</p></li><li><p><code>meta</code>: A parsed SpikeGLX .ap.meta file as imported using <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.importphy"><code>LaskaCore.importphy</code></a> or <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.parseglxmeta-Tuple{String}"><code>LaskaCore.parseglxmeta</code></a>.</p></li></ul><p>In order to convert the raw data to volts the function <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.tovolts-Tuple{AbstractArray, Dict{String, String}}"><code>LaskaCore.tovolts</code></a> can be used.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L153-L167" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.importphy" href="#LaskaCore.importphy">#</a> <b><u>LaskaCore.importphy</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">importphy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(phydir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, glxdir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, triggerpath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Pair,Vector{Pair{Symbol,Function}},Nothing}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, includemua</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, samplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing,Real}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Import Kilosort output processed in Phy. Spiketimes are sorted.</p><p>By default, only &quot;good&quot; clusters as per phy output are included. Setting <code>includemua=true</code> will include &quot;mua&quot; clusters as well as unclassified.</p><p><strong>Arguments</strong></p><ul><li><p><strong>Positional arguments</strong></p><ul><li><p><code>phydir</code>: Phy output directory. Has to contain the files &quot;spike_clusters.npy&quot;, &quot;spike_times.npy&quot; and &quot;cluster_info.tsv&quot;.</p></li><li><p><code>glxdir</code>: SpikeGLX output directory. Has to contain a &quot;.meta&quot; file. May be omitted if the keyword argument <code>samplerate</code> is provided.</p></li><li><p><code>triggerpath</code>: Direct path to a &quot;.csv&quot; or &quot;.bin&quot; file containing a <em>single</em> trigger channel as exported from SpikeGLX. Optional argument.</p></li></ul></li><li><p><strong>Keyword arguments</strong></p><ul><li><p><code>filter</code>: A <code>Pair</code> or <code>Vector{Pair}</code> allowing clusters to be excluded based on variables in <em>cluster_info.tsv</em> (see below for examples).</p></li><li><p><code>samplerate</code>: The samplerate of the spike times. Required if <code>glxdir</code> is not specified. If both <code>glxdir</code> and <code>samplerate</code> is specified the <code>samplerate</code> argument will override the samplerate found in the SpikeGLX .meta file.</p></li><li><p><code>includemua</code>: If <code>true</code> clusters not marked as good in KiloSort/Phy will be included. <code>false</code> by default.</p></li></ul></li></ul><p>Clusters may be further filtered based on any variable in &quot;cluster_info.tsv&quot;. This can be done by passing a <code>Pair{Symbol, Function}</code> containing the column to filter by and a function to be applied to aforementioned column (see below for examples). The syntax of the filter itself is exactly the same as when filtering a DataFrame, ie <code>:somevariable =&gt; x -&gt; x &gt; 42</code> in order to only include clusters where <code>somevariable</code> in cluster_info.tsv is greater than 42. Several filters may be applied by wrapping them in a <code>Vector</code>. For further information see the <code>DataFrames.jl</code> <a href="https://dataframes.juliadata.org/stable/lib/functions/#Base.filter" target="_blank" rel="noreferrer">documentation on filter</a>.</p><p><strong>Example</strong></p><div class="language-Julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### Exclude any cluster with a mean firing rate less than 1:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                            A \`Symbol\` identifying the column to apply the filtering function to ----vvv</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> importphy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;phyoutput_directory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;glxoutput_directory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;direct_path_to_triggerfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#                                                        An anonymous function returning \`true\` if x &gt; 1 ----^^^^^^^^^^</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### Exclude any cluster with a mean firing rate less than 1 and/or amp less than 30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filtervec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:amp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> importphy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;phyoutput_directory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;glxoutput_directory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;direct_path_to_triggerfile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filtervec)</span></span></code></pre></div><p><strong>Returns</strong></p><p>A <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.PhyOutput"><code>LaskaCore.PhyOutput</code></a> struct.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/importphy.jl#L4-L49" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.info-Tuple{T} where T&lt;:AbstractCluster" href="#LaskaCore.info-Tuple{T} where T&lt;:AbstractCluster">#</a> <b><u>LaskaCore.info</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, var</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns info (as a DataFrame) about <code>cluster</code>. A string may be supplied to return a specific entry.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L63-L68" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.info-Tuple{T} where T&lt;:AbstractExperiment" href="#LaskaCore.info-Tuple{T} where T&lt;:AbstractExperiment">#</a> <b><u>LaskaCore.info</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, var) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the <code>cluster_info.tsv</code> attached to the <code>experiment</code> in the form of a <code>DataFrame</code>. If <code>var</code> is provided returns a <code>Vector</code> of the matching column.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L148-L154" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.maxval-Tuple{RelativeSpikeVector}" href="#LaskaCore.maxval-Tuple{RelativeSpikeVector}">#</a> <b><u>LaskaCore.maxval</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maxval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Find the maximum value in a <a href="/Laska.jl.git/dev/guide/types#RelativeSpikeVector"><code>RelativeSpikeVector</code></a>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/findmax.jl#L1-L6" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.minval-Tuple{RelativeSpikeVector}" href="#LaskaCore.minval-Tuple{RelativeSpikeVector}">#</a> <b><u>LaskaCore.minval</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">minval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Find the minimum value in a <a href="/Laska.jl.git/dev/guide/types#RelativeSpikeVector"><code>RelativeSpikeVector</code></a>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/findmax.jl#L35-L40" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.nclusters-Tuple{AbstractExperiment}" href="#LaskaCore.nclusters-Tuple{AbstractExperiment}">#</a> <b><u>LaskaCore.nclusters</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nclusters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the number of clusters in <code>exp</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L208-L212" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.nspikes-Tuple{Cluster}" href="#LaskaCore.nspikes-Tuple{Cluster}">#</a> <b><u>LaskaCore.nspikes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nspikes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the number of spikes of <code>cluster</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L53-L58" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.nspikes-Tuple{RelativeCluster}" href="#LaskaCore.nspikes-Tuple{RelativeCluster}">#</a> <b><u>LaskaCore.nspikes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nspikes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the total number of spikes around each trigger in <code>cluster</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L126-L130" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.ntrigs-Tuple{T} where T&lt;:AbstractExperiment" href="#LaskaCore.ntrigs-Tuple{T} where T&lt;:AbstractExperiment">#</a> <b><u>LaskaCore.ntrigs</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ntrigs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the number of trigger events in <code>experiment</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L80-L85" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.parseglxmeta-Tuple{String}" href="#LaskaCore.parseglxmeta-Tuple{String}">#</a> <b><u>LaskaCore.parseglxmeta</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parseglxmeta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Parses a spikeGLX .meta file into a Dict.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L303-L309" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.parseimroTbl-Tuple{Any}" href="#LaskaCore.parseimroTbl-Tuple{Any}">#</a> <b><u>LaskaCore.parseimroTbl</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parseimroTbl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tbl)</span></span></code></pre></div><p>Determines the probe type and parses the Imec Readout Table accordingly.</p><p>For information on what info is contained in the table depending on probe type please see the section on <code>~imroTbl</code> in the <a href="http://billkarsh.github.io/SpikeGLX/Sgl_help/Metadata_30.html" target="_blank" rel="noreferrer">SpikeGLX manual</a></p><p>Currently, parsing functions for the following probes are implemented:</p><ul><li>NP 1.0-like (0,1020,1030,1100,1120,1121,1122,1123,1200,1300)</li></ul><p>Returns a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.ImroTbl"><code>LaskaCore.ImroTbl</code></a></p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L88-L102" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.relativespecs" href="#LaskaCore.relativespecs">#</a> <b><u>LaskaCore.relativespecs</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relativespecs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relativespecs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, spec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a <code>NamedTuple</code> containing the &#39;specs&#39; of a <code>RelativeSpikes</code> struct. Includes the <code>back</code> and <code>forward</code> variables used as well as the number of trigger events (<code>ntrigs</code>).</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L164-L171" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.relativespikes-Union{Tuple{Y}, Tuple{S}, Tuple{M}, Tuple{V}, Tuple{U}, Tuple{T}, Tuple{PhyOutput{T, U, M, S}, Dict{String, V}, Y, Y}} where {T, U, V, M, S&lt;:(Vector{&lt;:Integer}), Y&lt;:Real}" href="#LaskaCore.relativespikes-Union{Tuple{Y}, Tuple{S}, Tuple{M}, Tuple{V}, Tuple{U}, Tuple{T}, Tuple{PhyOutput{T, U, M, S}, Dict{String, V}, Y, Y}} where {T, U, V, M, S&lt;:(Vector{&lt;:Integer}), Y&lt;:Real}">#</a> <b><u>LaskaCore.relativespikes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relativespikes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PhyOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stimtrain</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{String,T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, back, forward) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a <code>RelativeSpikes</code> struct which contains <code>RelativeCluster</code>s and contains only spiketimes occuring <code>back</code> before triggers or <code>forward</code> after them. Spiketimes are represented relative to the trigger event. For example a spike occuring 10ms before the trigger will appear as -300 if the sample rate is 30 000Hz</p><p><strong>Arguments</strong></p><p>All arguments representing time may be provided in a <code>Unitful.jl</code> unit or the samplerate of the experiment. If one time is provided in a <code>Unitful</code> unit of time the others will have to be provided as such as well.</p><ul><li><p><code>p::PhyOutput</code> – A PhyOutput struct.</p></li><li><p><code>stimtrain</code> – A <code>Dict</code> describing each trigger event. For example <code>Dict(&quot;US&quot; =&gt; 0u&quot;ms&quot;, &quot;CS&quot; =&gt; 300u&quot;ms&quot;)</code> would mean one event (CS) at trigger and another (US) 300ms after trigger.</p></li><li><p><code>back</code> – Time before trigger to include in each spike train.</p></li><li><p><code>forward</code> – Time after trigger to include in each spike train.</p></li></ul><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/triggers/relativespikes.jl#L4-L21" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.rounddown-Union{Tuple{N}, Tuple{T}, Tuple{T, N}} where {T, N}" href="#LaskaCore.rounddown-Union{Tuple{N}, Tuple{T}, Tuple{T, N}} where {T, N}">#</a> <b><u>LaskaCore.rounddown</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rounddown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Rounds <code>value</code> down to the nearest lesser multiple of <code>interval</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/rounding.jl#L17-L23" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.roundup-Union{Tuple{N}, Tuple{T}, Tuple{T, N}} where {T, N}" href="#LaskaCore.roundup-Union{Tuple{N}, Tuple{T}, Tuple{T, N}} where {T, N}">#</a> <b><u>LaskaCore.roundup</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">roundup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, interval</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span></code></pre></div><p>Rounds <code>value</code> up to the nearest greater multiple of <code>interval</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/rounding.jl#L7-L12" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.samplerate-Tuple{AbstractCluster}" href="#LaskaCore.samplerate-Tuple{AbstractCluster}">#</a> <b><u>LaskaCore.samplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the current samplerate (in Hz) of <code>cluster</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L88-L92" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.samplerate-Tuple{LaskaCore.AbstractSpikeVector}" href="#LaskaCore.samplerate-Tuple{LaskaCore.AbstractSpikeVector}">#</a> <b><u>LaskaCore.samplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sample rate of <code>V</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L68-L72" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.samplerates-Tuple{AbstractExperiment}" href="#LaskaCore.samplerates-Tuple{AbstractExperiment}">#</a> <b><u>LaskaCore.samplerates</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a <code>Vector</code> of all samplerates of clusters in <code>experiment</code>. The samplerates are in the same order as the vector returned from <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.clusterids-Tuple{T} where T&lt;:AbstractExperiment"><code>LaskaCore.clusterids</code></a>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L221-L227" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.sampleratetotime-Union{Tuple{U}, Tuple{Real, Real, U}} where U&lt;:(Unitful.FreeUnits{T, 𝐓} where T)" href="#LaskaCore.sampleratetotime-Union{Tuple{U}, Tuple{Real, Real, U}} where U&lt;:(Unitful.FreeUnits{T, 𝐓} where T)">#</a> <b><u>LaskaCore.sampleratetotime</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sampleratetotime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(samplerate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, U</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LaskaCore.FreeTUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Convert a time represented in a samplerate to another unit. <code>unit</code> should ba <code>Unitful.jl</code> unit of time. Always returns a normal <code>Float64</code>. <code>time&#39; may be a single number or a</code>Vector\` of such.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Convert time = 450000 sampled at 30000 Hz to ms (i.e 1500)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LaskaCore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sampleratetotime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/timeconv.jl#L106-L120" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikemmap-Tuple{String, Int64}" href="#LaskaCore.spikemmap-Tuple{String, Int64}">#</a> <b><u>LaskaCore.spikemmap</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikemmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nchans</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikemmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{String, String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a memory map of a spikeGLX .bin file. Requires a path to the <code>file</code> and the number of channels. The easiest way to provide the number of channels is to pass a parsed .meta file.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L173-L180" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Tuple{AbstractVector, Any, Any}" href="#LaskaCore.spikes_in_timerange!-Tuple{AbstractVector, Any, Any}">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound, upperbound)</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.SpikeVector"><code>LaskaCore.SpikeVector</code></a> in-place, only including spikes between <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L334-L338" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Tuple{RelativeSpikeVector, AbstractRange}" href="#LaskaCore.spikes_in_timerange!-Tuple{RelativeSpikeVector, AbstractRange}">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> in-place, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L466-L470" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Tuple{RelativeSpikeVector, Any, Any}" href="#LaskaCore.spikes_in_timerange!-Tuple{RelativeSpikeVector, Any, Any}">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound, upperbound)</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> in-place, only including spikes between <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L439-L443" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Tuple{SpikeVector, AbstractRange}" href="#LaskaCore.spikes_in_timerange!-Tuple{SpikeVector, AbstractRange}">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.SpikeVector"><code>LaskaCore.SpikeVector</code></a> in-place, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L356-L360" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Union{Tuple{TimeUnit}, Tuple{U}, Tuple{T}, Tuple{RelativeSpikeVector{T, U}, AbstractRange{TimeUnit}}} where {T, U, TimeUnit&lt;:(Quantity{&lt;:Number, 𝐓})}" href="#LaskaCore.spikes_in_timerange!-Union{Tuple{TimeUnit}, Tuple{U}, Tuple{T}, Tuple{RelativeSpikeVector{T, U}, AbstractRange{TimeUnit}}} where {T, U, TimeUnit&lt;:(Quantity{&lt;:Number, 𝐓})}">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector{T,U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange{TUNIT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U,TUNIT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> in-place using a [<code>Unitful</code>] time range, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L451-L455" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Union{Tuple{T}, Tuple{RelativeSpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange!-Union{Tuple{T}, Tuple{RelativeSpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, upperbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> in-place using [<code>Unitful</code>] bounds, only including spikes between <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L477-L481" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Union{Tuple{T}, Tuple{SpikeVector, AbstractRange{T}}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange!-Union{Tuple{T}, Tuple{SpikeVector, AbstractRange{T}}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.SpikeVector"><code>LaskaCore.SpikeVector</code></a> in-place using a [<code>Unitful</code>] time range, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L343-L347" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange!-Union{Tuple{T}, Tuple{SpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange!-Union{Tuple{T}, Tuple{SpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, upperbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.SpikeVector"><code>LaskaCore.SpikeVector</code></a> in-place, only including spikes between <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L365-L369" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange-Tuple{RelativeSpikeVector, AbstractRange}" href="#LaskaCore.spikes_in_timerange-Tuple{RelativeSpikeVector, AbstractRange}">#</a> <b><u>LaskaCore.spikes_in_timerange</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a>, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L426-L430" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange-Tuple{RelativeSpikeVector, Any, Any}" href="#LaskaCore.spikes_in_timerange-Tuple{RelativeSpikeVector, Any, Any}">#</a> <b><u>LaskaCore.spikes_in_timerange</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound, upperbound)</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a>, only including spikes between <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L386-L390" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{RelativeSpikeVector, AbstractRange{T}}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{RelativeSpikeVector, AbstractRange{T}}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> using a [<code>Unitful</code>] time range, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L397-L401" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{RelativeSpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{RelativeSpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, upperbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Filter a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.RelativeSpikeVector"><code>LaskaCore.RelativeSpikeVector</code></a> using [<code>Unitful</code>] bounds, only including spikes between <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L411-L415" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{SpikeVector, AbstractRange{T}}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{SpikeVector, AbstractRange{T}}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.SpikeVector"><code>LaskaCore.SpikeVector</code></a>, only including spikes that fall within the times specified in <code>range</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L304-L308" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{SpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})" href="#LaskaCore.spikes_in_timerange-Union{Tuple{T}, Tuple{SpikeVector, T, T}} where T&lt;:(Quantity{&lt;:Number, 𝐓})">#</a> <b><u>LaskaCore.spikes_in_timerange</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikes_in_timerange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lowerbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, upperbound</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number,Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.SpikeVector"><code>LaskaCore.SpikeVector</code></a>, only including spikes that fall within the times specified by <code>lowerbound</code> and <code>upperbound</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L317-L321" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikesatdepth-Union{Tuple{T}, Tuple{RelativeSpikes{T}, Any}} where T&lt;:Real" href="#LaskaCore.spikesatdepth-Union{Tuple{T}, Tuple{RelativeSpikes{T}, Any}} where T&lt;:Real">#</a> <b><u>LaskaCore.spikesatdepth</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikesatdepth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, depth) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikesatdepth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikesatdepth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns a single <code>RelativeSpikes</code>-vector containing all spiketimes at/in <code>depth</code>. Spiketimes are <strong>not sorted</strong> on return. Samplerates of all clusters in <code>p</code> must be equal.</p><p>The included depths are controlled by the type of the <code>depth</code> variable:</p><ul><li><p>A <strong>single number</strong> returns only the spikes of clusters at that exact depth.</p></li><li><p>A <strong>Tuple</strong> with 2 entries returns all clusters at depths between (and including) the values.</p></li><li><p>A <strong>Set</strong> returns the spiketimes of clusters with the exact depths in the Set.</p></li></ul><p>Returns an empty <code>RelativeSpikeVector</code> if no clusters match the specified depth(s).</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/spikesatdepth.jl#L65-L81" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spikesatdepth-Union{Tuple{U}, Tuple{T}, Tuple{PhyOutput{T, U}, Any}} where {T, U}" href="#LaskaCore.spikesatdepth-Union{Tuple{U}, Tuple{T}, Tuple{PhyOutput{T, U}, Any}} where {T, U}">#</a> <b><u>LaskaCore.spikesatdepth</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikesatdepth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PhyOutput{T, U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, depth) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikesatdepth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PhyOutput{T, U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spikesatdepth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PhyOutput{T, U}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T,U}</span></span></code></pre></div><p>Returns a single <code>SpikeVector{T,U}</code> of all spiketimes at/in <code>depth</code>. Spiketimes are <strong>not sorted</strong> on return.</p><p>The included depths are controlled by the type of the <code>depth</code> variable:</p><ul><li><p>A <strong>single number</strong> returns only the spikes of clusters at that exact depth.</p></li><li><p>A <strong>Tuple</strong> with 2 entries returns all clusters at depths between (and including) the values.</p></li><li><p>A <strong>Set</strong> returns the spiketimes of clusters with the exact depths in the Set.</p></li></ul><p>Returns an empty <code>SpikeVector</code> if no clusters match the specified depth(s).</p><p>Samplerates of all <code>SpikeVectors</code> in <code>p</code> must be equal.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/spikesatdepth.jl#L7-L25" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spiketimes-Tuple{LaskaCore.AbstractSpikeVector}" href="#LaskaCore.spiketimes-Tuple{LaskaCore.AbstractSpikeVector}">#</a> <b><u>LaskaCore.spiketimes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spiketimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSpikeVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the spiketimes of <code>V</code> as a <code>Vector</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/spikevector.jl#L75-L79" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spiketimes-Tuple{PhyOutput}" href="#LaskaCore.spiketimes-Tuple{PhyOutput}">#</a> <b><u>LaskaCore.spiketimes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spiketimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PhyOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get all spiketimes in <code>experiment</code>. Spiketimes are <strong>not sorted</strong> by time.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L122-L126" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spiketimes-Tuple{T} where T&lt;:AbstractCluster" href="#LaskaCore.spiketimes-Tuple{T} where T&lt;:AbstractCluster">#</a> <b><u>LaskaCore.spiketimes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spiketimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the spiketimes of <code>cluster</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/cluster.jl#L79-L83" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.spiketimes-Union{Tuple{RelativeSpikes{T}}, Tuple{T}} where T" href="#LaskaCore.spiketimes-Union{Tuple{RelativeSpikes{T}}, Tuple{T}} where T">#</a> <b><u>LaskaCore.spiketimes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> spiketimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Get all spiketimes of <code>experiment</code>. Returns a Vector of Vectors where each sub-vector holds the spike times around one trigger event.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L192-L196" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.stimtimes-Tuple{RelativeSpikes}" href="#LaskaCore.stimtimes-Tuple{RelativeSpikes}">#</a> <b><u>LaskaCore.stimtimes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stimtimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RelativeSpikes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a dict containing the stimtrain of a <code>RelativeSpikes</code> struct in the form of <code>label =&gt; time</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L183-L187" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.timetosamplerate-Tuple{AbstractExperiment, Any}" href="#LaskaCore.timetosamplerate-Tuple{AbstractExperiment, Any}">#</a> <b><u>LaskaCore.timetosamplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetoequalsamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Converts <code>time</code> into the samplerate of <code>p</code> if all clusters in <code>p</code> have the same samplerate. Otherwise returns an error.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/timeconv.jl#L92-L97" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.timetosamplerate-Union{Tuple{U}, Tuple{T}, Tuple{T, U}} where {T&lt;:(Union{var&quot;#s18&quot;, var&quot;#s4&quot;} where {var&quot;#s18&quot;&lt;:AbstractCluster, var&quot;#s4&quot;&lt;:LaskaCore.AbstractSpikeVector}), U&lt;:(AbstractRange{&lt;:Quantity{&lt;:Number, 𝐓}})}" href="#LaskaCore.timetosamplerate-Union{Tuple{U}, Tuple{T}, Tuple{T, U}} where {T&lt;:(Union{var&quot;#s18&quot;, var&quot;#s4&quot;} where {var&quot;#s18&quot;&lt;:AbstractCluster, var&quot;#s4&quot;&lt;:LaskaCore.AbstractSpikeVector}), U&lt;:(AbstractRange{&lt;:Quantity{&lt;:Number, 𝐓}})}">#</a> <b><u>LaskaCore.timetosamplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetosamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,U</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRange{&lt;:Quantity{&lt;:Number,Unitful.𝐓}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Convert a <code>time</code>-range of some unit from <code>Unitful.jl</code> into the samplerate of the <code>cluster</code>. For example, converting 10ms to a samplerate of 30 000Hz will yield a value of 300.0. The returned &quot;time&quot; will not be of any <code>Unitful</code> unit.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaskaCore</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unitful</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getcluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exp, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get cluster &#39;33&#39; from an AbstractExperiment</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetosamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Convert 0:10ms into the samplerate of the cluster</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/timeconv.jl#L37-L53" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.timetosamplerate-Union{Tuple{U}, Tuple{T}, Tuple{T, U}} where {T&lt;:(Union{var&quot;#s27&quot;, var&quot;#s26&quot;} where {var&quot;#s27&quot;&lt;:AbstractCluster, var&quot;#s26&quot;&lt;:LaskaCore.AbstractSpikeVector}), U&lt;:(Quantity{T, 𝐓} where T)}" href="#LaskaCore.timetosamplerate-Union{Tuple{U}, Tuple{T}, Tuple{T, U}} where {T&lt;:(Union{var&quot;#s27&quot;, var&quot;#s26&quot;} where {var&quot;#s27&quot;&lt;:AbstractCluster, var&quot;#s26&quot;&lt;:LaskaCore.AbstractSpikeVector}), U&lt;:(Quantity{T, 𝐓} where T)}">#</a> <b><u>LaskaCore.timetosamplerate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetosamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cluster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, U</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantity{&lt;:Number, Unitful.𝐓}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Convert a <code>time</code> of some unit from <code>Unitful.jl</code> into the samplerate of the <code>cluster</code>. For example, converting 10ms to a samplerate of 30 000Hz will yield a value of 300.0. The returned range will not be of any <code>Unitful</code> unit.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LaskaCore</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Unitful</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getcluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exp, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get cluster &#39;33&#39; from an AbstractExperiment</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetosamplerate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Convert 10ms into the samplerate of the cluster</span></span></code></pre></div><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/timeconv.jl#L13-L29" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.timetosampleratevec-Tuple{AbstractExperiment, Any}" href="#LaskaCore.timetosampleratevec-Tuple{AbstractExperiment, Any}">#</a> <b><u>LaskaCore.timetosampleratevec</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetosampleratevec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, time)</span></span></code></pre></div><p>Converts <code>time</code> to the sample rate of each cluster in <code>p</code> and returns the result as a Vector.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/helpers/timeconv.jl#L81-L85" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.tovolts-Tuple{AbstractArray, Dict{String, String}}" href="#LaskaCore.tovolts-Tuple{AbstractArray, Dict{String, String}}">#</a> <b><u>LaskaCore.tovolts</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tovolts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Matrix{Int16}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{String,String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Convert a Vector/Matrix of a raw spikeGLX AP recording to volts.</p><p>The meta expected is the <code>Dict</code> returned from <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.getmeta"><code>LaskaCore.getmeta</code></a> or <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.parseglxmeta-Tuple{String}"><code>LaskaCore.parseglxmeta</code></a>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/import/readglx.jl#L195-L202" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="LaskaCore.triggertimes-Tuple{T} where T&lt;:AbstractExperiment" href="#LaskaCore.triggertimes-Tuple{T} where T&lt;:AbstractExperiment">#</a> <b><u>LaskaCore.triggertimes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triggertimes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Returns the timestamps of trigger events in <code>experiment</code>.</p><p><a href="https://github.com/Laska-jl/LaskaCore.jl/blob/v0.2.3/src/types/experiments.jl#L100-L105" target="_blank" rel="noreferrer">source</a></p></div><br>`,165),r=[l];function p(n,h,k,d,o,c){return e(),i("div",null,r)}const E=s(t,[["render",p]]);export{u as __pageData,E as default};
