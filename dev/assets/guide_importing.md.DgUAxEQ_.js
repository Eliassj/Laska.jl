import{_ as s,c as i,o as a,a6 as t}from"./chunks/framework.Dp6owxBf.js";const g=JSON.parse('{"title":"Importing data processed in Phy","description":"","frontmatter":{},"headers":[],"relativePath":"guide/importing.md","filePath":"guide/importing.md","lastUpdated":null}'),e={name:"guide/importing.md"},n=t(`<h1 id="Importing-data-processed-in-Phy" tabindex="-1">Importing data processed in Phy <a class="header-anchor" href="#Importing-data-processed-in-Phy" aria-label="Permalink to &quot;Importing data processed in Phy {#Importing-data-processed-in-Phy}&quot;">​</a></h1><p>Importing Phy output data is done using <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.importphy"><code>LaskaCore.importphy</code></a>. This will return a <a href="/Laska.jl.git/dev/ref/core_ref#LaskaCore.PhyOutput"><code>LaskaCore.PhyOutput</code></a> struct holding all units/clusters, their spiketimes and related information.</p><h4 id="Basic-usage" tabindex="-1">Basic usage <a class="header-anchor" href="#Basic-usage" aria-label="Permalink to &quot;Basic usage {#Basic-usage}&quot;">​</a></h4><p>The method below will import data found in <code>&quot;path/to/phy/output&quot;</code>. By default, only &quot;good&quot; clusters as found in &quot;cluster_info.tsv&quot; will be included. Setting <code>includemua</code> to <code>false</code> will include <em>all</em> clusters.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> importphy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/phy/output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>In order to include spikeGLX metadata and/or a specific channel (exported from spikeGLX) with trigger events, paths to these must be included. For spikeGLX metadata, a path to the folder containing the .meta file is enough. For triggerchannel, a direct path is required.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> importphy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;path/to/phy/output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;path/to/spikeGLX/meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;path/to/triggerchannel.bin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="Filtering-clusters" tabindex="-1">Filtering clusters <a class="header-anchor" href="#Filtering-clusters" aria-label="Permalink to &quot;Filtering clusters {#Filtering-clusters}&quot;">​</a></h4><p>Clusters may be easily filtered on import based on variable(s) in &quot;cluster_info.tsv&quot; by including <code>filter</code> as a keyword argument.</p><p>A <code>filter</code> is anything that may be passed as the first argument when filtering a <code>DataFrame</code>. For more information on this please see the <code>DataFrames.jl</code> <a href="https://dataframes.juliadata.org/stable/lib/functions/#Base.filter" target="_blank" rel="noreferrer">documentation</a>.</p><p>Several <code>filters</code> may be included by wrapping them in a Vector.</p><h6 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h6><p>In the example below, we create a filter with a function that will return <code>true</code> if <code>x &gt; 1</code> and apply it to the cluster_info.tsv variable <code>:fr</code>. This will cause only clusters with a mean fire rate of more than 1Hz to be included in the <code>result</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> importphy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;path/to/phy/output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;path/to/spikeGLX/meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;path/to/triggerchannel.bin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,14),l=[n];function p(h,r,o,d,c,k){return a(),i("div",null,l)}const E=s(e,[["render",p]]);export{g as __pageData,E as default};
